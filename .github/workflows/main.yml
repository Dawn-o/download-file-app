name: "Build"

permissions:
  contents: write

on:
  # pull_request:
  #   branches:
  #     - main

  push:
    branches:
      - main

jobs:
  build:
    name: Build & Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: "oracle"
          java-version: "17"

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.5"
          channel: "stable"

      - name: Install Dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build APK
        run: flutter build apk --release

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk

      - name: Get Previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        continue-on-error: true
        with:
          fallback: v1.0.0

      - name: Calculate next version
        id: calculate_version
        run: |
          PREV_VERSION=${{ steps.previoustag.outputs.tag }}
          echo "Previous version: $PREV_VERSION"
          PREV_VERSION=${PREV_VERSION#v}
          IFS='.' read -r major minor patch <<< "$PREV_VERSION"
          NEW_VERSION="$major.$minor.$((patch+1))"
          echo "New version: v$NEW_VERSION"
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          name: "Release v${{ env.VERSION }}"
          tag: "v${{ env.VERSION }}"
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          allowUpdates: true
          replacesArtifacts: true
